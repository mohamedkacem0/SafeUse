// src/pages/Contact.tsx
import React, { useState, useEffect } from "react";
import { useNavigate } from "react-router-dom";
import { Mail, MapPin, Phone, Twitter } from "lucide-react";

interface UserProfile {
  Correo: string;
  Telefono: string;
  Nombre: string;
  Apellidos: string;
}

interface FormData {
  nombre: string;
  apellidos: string;
  email: string;
  telefono: string;
  mensaje: string;
}

export default function Contact() {
  const navigate = useNavigate();
  const [status, setStatus] = useState<"idle" | "sending" | "error">("idle");
  const [userData, setUserData] = useState<UserProfile>({
    Correo: "",
    Telefono: "",
    Nombre: "",
    Apellidos: ""
  });
  const [isLoading, setIsLoading] = useState(true);
  const [message, setMessage] = useState("");
  const inputBase = "w-full border border-gray-300 rounded-md bg-transparent px-3 py-2 text-base placeholder:text-gray-500 focus:outline-none focus:border-primary focus:ring-1 focus:ring-primary transition-colors duration-200";

  // Fetch user data on component mount
  useEffect(() => {
    const fetchUserData = async () => {
      try {
        const response = await fetch("/api/user/profile");
        if (response.ok) {
          const data = await response.json();
          setUserData({
            Correo: data.email || "",
            Telefono: data.phone || "",
            Nombre: data.firstName || "",
            Apellidos: data.lastName || ""
          });
        }
      } catch (error) {
        console.error("Error fetching user data:", error);
      } finally {
        setIsLoading(false);
      }
    };

    fetchUserData();
  }, []);

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
    const { name, value } = e.target;
    setUserData(prev => ({
      ...prev,
      [name]: value
    }));
  };

  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    setStatus("sending");
    
    const formData: FormData = {
      nombre: userData.Nombre,
      apellidos: userData.Apellidos,
      email: userData.Correo,
      telefono: userData.Telefono,
      mensaje: message
    };

    try {
      const response = await fetch("/api/contact", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(formData),
      });

      if (response.ok) {
        setStatus("idle");
        setMessage("");
        alert("¡Mensaje enviado con éxito!");
      } else {
        throw new Error("Error al enviar el mensaje");
      }
    } catch (error) {
      console.error("Error:", error);
      setStatus("error");
      alert("Hubo un error al enviar el mensaje. Por favor, inténtalo de nuevo.");
    }
  };

  if (isLoading) {
    return (
      <div className="flex items-center justify-center min-h-screen">
        <div className="animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-primary"></div>
      </div>
    );
  }

  return (
    <div className="bg-gray-50 min-h-screen py-16">
      <div className="max-w-6xl mx-auto px-4">
        {/* Header */}
        <div className="text-center mb-16">
          <h1 className="text-4xl font-bold text-gray-900 mb-4">Contáctanos</h1>
          <p className="text-lg text-gray-600 max-w-2xl mx-auto">
            ¿Tienes preguntas o comentarios? Nos encantaría saber de ti. Completa el formulario o contáctanos directamente.
          </p>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-2 gap-12">
          {/* Contact Form */}
          <div className="bg-white rounded-lg shadow-md p-8">
            <h2 className="text-2xl font-semibold text-gray-800 mb-6">Envíanos un mensaje</h2>
            
            <form onSubmit={handleSubmit} className="space-y-6">
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                  <label htmlFor="nombre" className="block mb-1.5 text-sm font-medium text-gray-700">
                    Nombre
                  </label>
                  <input
                    id="nombre"
                    name="Nombre"
                    type="text"
                    value={userData.Nombre}
                    onChange={handleInputChange}
                    className={inputBase}
                    placeholder="Tu nombre"
                    required
                  />
                </div>

                <div>
                  <label htmlFor="apellidos" className="block mb-1.5 text-sm font-medium text-gray-700">
                    Apellidos
                  </label>
                  <input
                    id="apellidos"
                    name="Apellidos"
                    type="text"
                    value={userData.Apellidos}
                    onChange={handleInputChange}
                    className={inputBase}
                    placeholder="Tus apellidos"
                    required
                  />
                </div>
              </div>

              <div>
                <label htmlFor="email" className="block mb-1.5 text-sm font-medium text-gray-700">
                  Correo electrónico
                </label>
                <input
                  id="email"
                  name="Correo"
                  type="email"
                  value={userData.Correo}
                  readOnly
                  className={`${inputBase} bg-gray-50 cursor-not-allowed`}
                  placeholder="tu@email.com"
                  required
                />
              </div>

              <div>
                <label htmlFor="telefono" className="block mb-1.5 text-sm font-medium text-gray-700">
                  Teléfono
                </label>
                <input
                  id="telefono"
                  name="Telefono"
                  type="tel"
                  value={userData.Telefono}
                  onChange={handleInputChange}
                  className={inputBase}
                  placeholder="+34 123 456 789"
                  required
                />
              </div>

              <div>
                <label htmlFor="mensaje" className="block mb-1.5 text-sm font-medium text-gray-700">
                  Mensaje
                </label>
                <textarea
                  id="mensaje"
                  name="mensaje"
                  rows={4}
                  value={message}
                  onChange={(e) => setMessage(e.target.value)}
                  className={`${inputBase} resize-none`}
                  placeholder="Escribe tu mensaje..."
                  required
                />
              </div>

              <div className="pt-2">
                <button
                  type="submit"
                  disabled={status === "sending"}
                  className="w-full sm:w-auto bg-[#335A2C] text-white font-medium py-2.5 px-8 rounded-md hover:bg-[#2A4A23] transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#335A2C] disabled:opacity-50"
                >
                  {status === "sending" ? "Enviando..." : "Enviar mensaje"}
                </button>
              </div>
            </form>
          </div>

          {/* Contact Information */}
          <div className="space-y-8">
            <div className="bg-white rounded-lg shadow-md p-8 h-full">
              <h2 className="text-2xl font-semibold text-gray-800 mb-6">Información de contacto</h2>
              
              <div className="space-y-6">
                <div className="flex items-start space-x-4">
                  <div className="flex-shrink-0 bg-green-50 p-3 rounded-full text-green-600">
                    <MapPin className="h-6 w-6" />
                  </div>
                  <div>
                    <h3 className="font-medium text-gray-900">Dirección</h3>
                    <p className="text-gray-600">Calle Falsa 123, 28001 Madrid, España</p>
                  </div>
                </div>

                <div className="flex items-start space-x-4">
                  <div className="flex-shrink-0 bg-green-50 p-3 rounded-full text-green-600">
                    <Phone className="h-6 w-6" />
                  </div>
                  <div>
                    <h3 className="font-medium text-gray-900">Teléfono</h3>
                    <p className="text-gray-600">+34 91 234 56 78</p>
                    <p className="text-gray-600 text-sm mt-1">Lunes a Viernes: 9:00 - 18:00</p>
                  </div>
                </div>

                <div className="flex items-start space-x-4">
                  <div className="flex-shrink-0 bg-green-50 p-3 rounded-full text-green-600">
                    <Mail className="h-6 w-6" />
                  </div>
                  <div>
                    <h3 className="font-medium text-gray-900">Correo electrónico</h3>
                    <p className="text-gray-600">info@safeshop.com</p>
                    <p className="text-gray-600">soporte@safeshop.com</p>
                  </div>
                </div>
              </div>

              <div className="mt-8 pt-8 border-t border-gray-200">
                <h3 className="text-lg font-medium text-gray-900 mb-4">Síguenos</h3>
                <div className="flex space-x-4">
                  <a href="#" className="text-gray-400 hover:text-gray-500">
                    <span className="sr-only">Twitter</span>
                    <Twitter className="h-6 w-6" />
                  </a>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}
